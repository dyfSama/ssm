<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dyf.modules.logger.mapper.LoggerMapper">

    <resultMap id="BaseResultMap" type="com.dyf.modules.logger.entity.Logger">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="module_name" property="moduleName" jdbcType="VARCHAR"/>
        <result column="business_type" property="businessType" jdbcType="INTEGER"/>
        <result column="exec_method" property="execMethod" jdbcType="VARCHAR"/>
        <result column="remote_url" property="remoteUrl" jdbcType="VARCHAR"/>
        <result column="request_method" property="requestMethod" jdbcType="VARCHAR"/>
        <result column="remote_addr" property="remoteAddr" jdbcType="VARCHAR"/>
        <result column="exec_time" property="execTime" jdbcType="INTEGER"/>
        <result column="is_exception" property="isException" jdbcType="INTEGER"/>
        <result column="exception_info" property="exceptionInfo" jdbcType="LONGVARCHAR"/>
        <result column="create_by" property="createBy" jdbcType="VARCHAR"/>
        <result column="create_date" property="createDate" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,
        module_name,
        business_type,
        exec_method,
        remote_url,
        request_method,
        remote_addr,
        exec_time,
        is_exception,
        exception_info,
        create_by,
        create_date
    </sql>

    <select id="selectOneById" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from sys_log where id = #{id}
    </select>

    <!-- 逻辑删除 -->
    <update id="deleteLogicalById" parameterType="java.lang.String">
        update sys_log set status = '1'  where id = #{id}
    </update>
    <!-- 物理删除 -->
    <delete id="deletePhysicalById" parameterType="java.lang.String">
        delete from sys_log where id = #{id}
    </delete>

    <!-- 批量逻辑删除 -->
    <update id="deleteLogicalByIdList" parameterType="list">
        update sys_log set status = '1' where id in
        <foreach collection="list" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </update>
    <!-- 批量物理删除 -->
    <delete id="deletePhysicalByIdList" parameterType="list">
        delete from sys_log where id in
        <foreach collection="list" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>


    <select id="findList" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from sys_log
        <where>
            status  != '1'
            <if test="createBy != null">
                and create_by = #{createBy}
            </if>
            <if test="moduleName != null and moduleName != '' ">
                and module_name like concat('%',#{moduleName},'%')
            </if>
            <if test="businessType != null">
                and business_type = #{businessType}
            </if>
            <if test="createDate != null">
                and create_date = #{createDate}
            </if>
            <if test="isException != null">
                and is_exception = #{isException}
            </if>
        </where>
        order by create_date desc
    </select>


    <insert id="insert" parameterType="com.dyf.modules.logger.entity.Logger">
        insert into sys_log (
            id,
            module_Name,
            business_type,
            exec_method,
            remote_url,
            request_method,
            remote_addr,
            exec_time,
            is_exception,
            exception_info,
            create_by,
            create_date
            )
        values (
             #{id},
             #{moduleName},
             #{businessType},
             #{execMethod},
             #{remoteUrl},
             #{requestMethod},
             #{remoteAddr},
             #{execTime},
             #{isException},
             #{exceptionInfo},
             #{createBy},
             #{createDate})
    </insert>

</mapper>